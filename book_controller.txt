package com.lms.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import com.lms.service.*;
import com.lms.entity.*;

import java.util.List;

@RestController
@RequestMapping("/api/books")
public class BookController {
	
	 @Autowired
	    private BookService bookService;

	 
	 	//get all books
	    @GetMapping
	    public List<Book> getAllBooks() {
	        return bookService.findAll();
	    }

	    //get book by id
	    @GetMapping("/{id}")
	    public Book getBook(@PathVariable Long id) {
	        return bookService.findById(id);
	    }

	    //add a new book
	    @PostMapping
	    public Book addBook(@RequestBody Book book) {
	        return bookService.save(book);
	    }
	    
	    //update an existing book by id
	    @PutMapping("/{id}")
	    public Book updateBook(@PathVariable Long id, @RequestBody Book book) {
	        return bookService.save(book);
	    }

	    //delete a book by id
	    @DeleteMapping("/{id}")
	    public void deleteBook(@PathVariable Long id) {
	        bookService.deleteById(id);
	    }

	    //borrow book by specifying book id and user id
	    @PostMapping("/{bookId}/borrow/{userId}")
	    public ResponseEntity<Book> borrowBook(@PathVariable Long bookId, @PathVariable Long userId) {
	        Book borrowedBook = bookService.borrowBook(bookId, userId);
	        if (borrowedBook != null) {
	            return ResponseEntity.ok(borrowedBook);
	        } else {
	            return ResponseEntity.badRequest().build();
	        }
	    }
	
	    ////return a borrowed book by specifying book id
	    @PostMapping("/{bookId}/return")
	    public ResponseEntity<Book> returnBook(@PathVariable Long bookId) {
	        Book returnedBook = bookService.returnBook(bookId);
	        if (returnedBook != null) {
	            return ResponseEntity.ok(returnedBook);
	        } else {
	            return ResponseEntity.badRequest().build();
	        }
	    }
	
	

}
